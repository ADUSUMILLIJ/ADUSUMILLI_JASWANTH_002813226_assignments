/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Login;

import ui.Professor.ProfViewJPanel;
import ui.Admin.AdminJPanel;
import ui.Student.StuViewDetails;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Professor.Professor;
import model.Student.Student;
import model.Student.StudentDirectory;
import model.Course.Course;
import model.Course.CourseDirectory;
import model.Employer.Employer;
import model.Employer.EmployerDirectory;
import model.Professor.ProfessorDirectory;
import ui.Admin.EmployerJPanel;


/**
 *
 * @author sushanthkumarreddyjanga
 */
public class LoginJPanel extends javax.swing.JPanel {
    JPanel work;
    ProfessorDirectory professorList;
    StudentDirectory studentList;
    Professor professor;
    Student student;
    Course course;
    CourseDirectory courseList;
    EmployerDirectory employerList;
    Employer employer;
   
    /**
     * Creates new form LoginJPanel
     */

        

    public LoginJPanel(JPanel work, ProfessorDirectory professorList, StudentDirectory studentList, Professor professor, Student student, Course course, CourseDirectory courseList,Employer employer,EmployerDirectory employerList) {
        initComponents();
        this.work=work;
        this.professorList=professorList;
        this.studentList=studentList;
        this.professor=professor;
        this.student=student;
        this.course=course;
        this.courseList=courseList;
        this.employerList=employerList;
        this.employer=employer;
    }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        btnBackL = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        choicedropdown = new javax.swing.JComboBox<>();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome To Edulearn");

        jLabel2.setText("UserName:");

        jLabel3.setText("Password:");

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnBackL.setText("Back");
        btnBackL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackLActionPerformed(evt);
            }
        });

        jLabel4.setText("Login As:");

        choicedropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Professor", "Student", " " }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(btnBackL))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(301, 301, 301)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnLogin)
                                        .addGap(68, 68, 68))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel4))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(choicedropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 310, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBackL)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(choicedropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(btnLogin))
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(361, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String username = txtUserName.getText();
        String password = txtPassword.getText();
        
        List<Professor> prof = professorList.getProfessors();
        List<Student> stu = studentList.getStudents();
        
        
        if("admin".equals(username) && "admin".equals(password)) {
            
            AdminJPanel panel = new AdminJPanel(work, professorList, studentList, employerList);
            work.add("AdminJPanel", panel);
            CardLayout layout = (CardLayout) work.getLayout();
            layout.next(work);
           }
         else if("employer".equals(username)&&"employer".equals(password)){
            
            EmployerJPanel panel = new EmployerJPanel(work,employer,employerList, studentList,student);
            work.add("EmployerJPanel", panel);
            CardLayout layout = (CardLayout) work.getLayout();
            layout.next(work);   
         
         }
        else if(choicedropdown.getSelectedItem().equals("Professor")){
            Professor pvalidatedUser = pvalidateUser(username, password);

            if(pvalidatedUser != null){
            String puserId = pvalidatedUser.getId(); // to get the ID of the authenticated user
            //System.out.println("Username: " + authenticatedUser.getUsername());
            //System.out.println("Password: " + authenticatedUser.getHshpassword());
            //JOptionPane.showMessageDialog(this, "Login Successfully");

            ProfViewJPanel userpanel = new ProfViewJPanel(work, puserId, professorList, professor, course, courseList);
            work.add("ProfViewDetails", userpanel);
            CardLayout layout = (CardLayout) work.getLayout();
            layout.next(work);
            
        }
        }
        else if(choicedropdown.getSelectedItem().equals("Student")){
             Student svalidatedUser = svalidateUser(username, password);

        if(svalidatedUser != null){
            String suserId = svalidatedUser.getId(); // to get the ID of the authenticated user
            //System.out.println("Username: " + authenticatedUser.getUsername());
            //System.out.println("Password: " + authenticatedUser.getHshpassword());
            //JOptionPane.showMessageDialog(this, "Login Successfully");

            StuViewDetails userpanel = new StuViewDetails(work,suserId, studentList, student, course, courseList, employer);
            work.add("StuViewDetails", userpanel);
            CardLayout layout = (CardLayout) work.getLayout();
            layout.next(work);
            
        }
        
        }
        else{
            JOptionPane.showMessageDialog(this,"Enter a Valid Username");
        }
        
        
        

    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnBackLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackLActionPerformed
        // TODO add your handling code here:
        work.remove(this);
        CardLayout layout = (CardLayout) work.getLayout();
        layout.previous(work);
    }//GEN-LAST:event_btnBackLActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackL;
    private javax.swing.JButton btnLogin;
    private javax.swing.JComboBox<String> choicedropdown;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables

    private Professor pvalidateUser(String username, String password) {
        
        List<Professor> users = professorList.getProfessors();

        for (Professor user : users) {
            if (user.getuName().equals(username)) {
                if (user.getPassword().equals(password)) {
                    //System.out.println(password);
                    //if (user.getStatus()) {
                    JOptionPane.showMessageDialog(this, "Login Successful");
                    return user; // Authentication successful, and the account is active
                } else {
                    JOptionPane.showMessageDialog(this, "Account has been temporarily deactivated.");
                    return null; // Account has been temporarily deactivated.
                }
                
                        
            }
            }
       // }
        JOptionPane.showMessageDialog(this, "Invalid username.");
        return null;
    }

    private Student svalidateUser(String username, String password) {
        
        List<Student> users = studentList.getStudents();
        
//        for(Student stu : users){
//            System.out.println(stu);
//            System.out.println(username);
//            System.out.println(stu.getName().equalsIgnoreCase(username));         
//        }
        
        for (Student user : users) {
            if (user.getuName().equalsIgnoreCase(username)) {
                if (user.getPassword().equals(password)) {
                    //System.out.println(password);
                    //if (user.getStatus()) {
                    JOptionPane.showMessageDialog(this, "Login Successful");
                    return user; // Authentication successful, and the account is active
                } else {
                    JOptionPane.showMessageDialog(this, "Account has been temporarily deactivated.");
                    return null; // Account has been temporarily deactivated.
                }
            }
    }

            
        /*List<Student> users = studentList.getStudents();

        for (Student user : users) {
            if (user.getuName().equals(username)) {
                System.out.print(user.getuName());
                System.out.print(username);
                if (user.getPassword().equals(password)) {
                    //if (user.getStatus()) {
                        JOptionPane.showMessageDialog(this, "Login Successful");
                        return user; // Authentication successful, and the account is active
                    } else {
                        JOptionPane.showMessageDialog(this, "Account has been temporarily deactivated.");
                        return null; // Account has been temporarily deactivated.
                    }
                 
                  // Invalid passwor
            
        return null;
        }
        }*/
            
        JOptionPane.showMessageDialog(this, "Invalid username.");
        return null; // Invalid username
    }

}
