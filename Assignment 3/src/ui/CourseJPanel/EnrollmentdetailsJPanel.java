/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.CourseJPanel;

import java.awt.CardLayout;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Course.Course;
import model.Course.CourseDirectory;
import model.Student.Student;
import model.Student.StudentDirectory;


/**
 *
 * @author jaswa
 */
public class EnrollmentdetailsJPanel extends javax.swing.JPanel {
    JPanel work;
    StudentDirectory studentList;
    Course course;
    CourseDirectory courseList;
    Student student;

    /**
     * Creates new form EnrollmentdetailsJPanel
     */
   

    public EnrollmentdetailsJPanel(JPanel work, StudentDirectory studentList, Course course, CourseDirectory courseList, Student student) {
        initComponents();
        this.work=work;
        this.studentList=studentList;
        this.course=course;
        this.courseList=courseList;
        this.student = student;
        populateEnrolltable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbltitle = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        btnsearch = new javax.swing.JButton();
        btnviewdetails = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourse = new javax.swing.JTable();
        btnback = new javax.swing.JButton();
        lblcoursename = new javax.swing.JLabel();
        txtCoursename = new javax.swing.JTextField();
        lblcoursecrn = new javax.swing.JLabel();
        txtcourseID = new javax.swing.JTextField();
        lblcredithours = new javax.swing.JLabel();
        txtprofessorName = new javax.swing.JTextField();
        lblprofessorname = new javax.swing.JLabel();
        txtprofessorID = new javax.swing.JTextField();
        lblcoursetype = new javax.swing.JLabel();
        txtTerm = new javax.swing.JTextField();
        lblstatus = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtCredit = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSID = new javax.swing.JTextField();

        lbltitle.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lbltitle.setForeground(new java.awt.Color(255, 0, 0));
        lbltitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitle.setText("ENROLLMENT DETAILS");

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });

        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        btnviewdetails.setText("View Details");
        btnviewdetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewdetailsActionPerformed(evt);
            }
        });

        tblCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Name", "Course ID", "Professor Name", "professor ID", "Term", "Time", "Credit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCourse);

        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        lblcoursename.setForeground(new java.awt.Color(255, 0, 0));
        lblcoursename.setText("Course Name:");

        txtCoursename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCoursenameActionPerformed(evt);
            }
        });

        lblcoursecrn.setForeground(new java.awt.Color(255, 0, 0));
        lblcoursecrn.setText("Course ID:");

        txtcourseID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcourseIDActionPerformed(evt);
            }
        });

        lblcredithours.setForeground(new java.awt.Color(255, 0, 0));
        lblcredithours.setText("Professor Name:");

        txtprofessorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtprofessorNameActionPerformed(evt);
            }
        });

        lblprofessorname.setForeground(new java.awt.Color(255, 0, 0));
        lblprofessorname.setText("Professor ID:");

        txtprofessorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtprofessorIDActionPerformed(evt);
            }
        });

        lblcoursetype.setForeground(new java.awt.Color(255, 0, 0));
        lblcoursetype.setText("Term:");

        txtTerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTermActionPerformed(evt);
            }
        });

        lblstatus.setForeground(new java.awt.Color(255, 0, 0));
        lblstatus.setText("Time");

        btnadd.setText("ADD");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Credit:");

        jLabel2.setText("Student ID:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnback)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbltitle, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addComponent(btnadd)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCredit, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                            .addComponent(txtSID))
                        .addGap(223, 223, 223)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(249, 249, 249)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblprofessorname, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtprofessorID, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblcoursetype, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtTime, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                        .addComponent(txtTerm)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblcoursename, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtCoursename, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(txtprofessorName, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblcoursecrn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtcourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(233, 233, 233))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblcredithours, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(541, 541, 541))))
                .addGroup(layout.createSequentialGroup()
                    .addGap(72, 72, 72)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnsearch)
                            .addGap(45, 45, 45)
                            .addComponent(btnviewdetails)))
                    .addGap(103, 103, 103)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnback))
                .addGap(223, 223, 223)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 233, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCredit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(btnadd)
                .addGap(14, 14, 14))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(94, 94, 94)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnsearch)
                        .addComponent(btnviewdetails))
                    .addGap(72, 72, 72)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblcoursename, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCoursename, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtcourseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblcoursecrn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblcredithours, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtprofessorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblprofessorname, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtprofessorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblcoursetype, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(10, 10, 10)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(71, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void btnviewdetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewdetailsActionPerformed
        // TODO add your handling code here:
        int selectedRow=tblCourse.getSelectedRow();
        if(selectedRow<0){
         JOptionPane.showMessageDialog(null,"Please Select a row from table first to view details","Warning",JOptionPane.WARNING_MESSAGE);    
        }
        else{
            Course account=(Course)tblCourse.getValueAt(selectedRow,0);
            txtCoursename.setText(account.getName());
            txtcourseID.setText(account.getId());
            txtprofessorName.setText(account.getProfessor());
            txtprofessorID.setText(account.getProfID());
            txtTerm.setText(account.getTerm());
            txtTime.setText(account.getTime());
            txtCredit.setText(Integer.toString(account.getCredit()));
            txtSID.setText(student.getId());
            
            
            
        }
    }//GEN-LAST:event_btnviewdetailsActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:{                                       
        work.remove(this);
        CardLayout layout=(CardLayout)work.getLayout();
        layout.previous(work);
    }//GEN-LAST:event_btnbackActionPerformed

    private void txtCoursenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCoursenameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCoursenameActionPerformed

    private void txtcourseIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcourseIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcourseIDActionPerformed

    private void txtprofessorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtprofessorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprofessorNameActionPerformed

    private void txtprofessorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtprofessorIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprofessorIDActionPerformed

    private void txtTermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTermActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTermActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        String name = txtCoursename.getText();
        String id= txtcourseID.getText();
        String pname = txtprofessorName.getText();
        String pid= txtprofessorID.getText();
        String term = txtTerm.getText();
        String time= txtTime.getText();
        int credit = Integer.parseInt(txtCredit.getText());
        String sid = txtSID.getText();
        
        //Student stuId = studentList.searchStudent(sid);
         
//        for(Student student1 : studentList){
//            
//        }
        
       // StuCourses c1 = new StuCourses(id, name, pname, pid, term, time, credit, stuId);
        // courses = student.getCourseList();
        //courses.add(c1);
        //course.setRegister(true);
        
        //register.addCourseToStudent(stuId,c1);
        
        //Revanth try
        Course newCourse = new Course();
        newCourse.setId(id);
        newCourse.setName(name);
        newCourse.setProfessor(pname);
        newCourse.setProfID(pid);
        newCourse.setTerm(term);
        newCourse.setTime(time);
        newCourse.setCredit(credit);
        student.addCourseToStudent(newCourse);
        
        JOptionPane.showMessageDialog(this, " Course Added");
        
        student.CourseListOutput();
           
        
    }//GEN-LAST:event_btnaddActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:
        Course result=courseList.searchCourse(txtsearch.getText());
        if(result==null){
             JOptionPane.showMessageDialog(null,"Account no doesnot exists","Information",JOptionPane.INFORMATION_MESSAGE);
        }
        else{
   
            txtCoursename.setText(result.getName());
            txtcourseID.setText(result.getId());
            txtprofessorName.setText(result.getProfessor());
            txtprofessorID.setText(result.getProfID());
            txtTerm.setText(result.getTerm());
            txtTime.setText(result.getTime());
            txtCredit.setText(Integer.toString(result.getCredit()));
             
        }
    }//GEN-LAST:event_btnsearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton btnviewdetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblcoursecrn;
    private javax.swing.JLabel lblcoursename;
    private javax.swing.JLabel lblcoursetype;
    private javax.swing.JLabel lblcredithours;
    private javax.swing.JLabel lblprofessorname;
    private javax.swing.JLabel lblstatus;
    private javax.swing.JLabel lbltitle;
    private javax.swing.JTable tblCourse;
    private javax.swing.JTextField txtCoursename;
    private javax.swing.JTextField txtCredit;
    private javax.swing.JTextField txtSID;
    private javax.swing.JTextField txtTerm;
    private javax.swing.JTextField txtTime;
    private javax.swing.JTextField txtcourseID;
    private javax.swing.JTextField txtprofessorID;
    private javax.swing.JTextField txtprofessorName;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables

    private void populateEnrolltable() {
        DefaultTableModel dtm = (DefaultTableModel) tblCourse.getModel();
        dtm.setRowCount(0);
        for(Course user: courseList.getCourses()){
            Object[] row = new Object[7];
            
            row[0] = user;
            row[1] = user.getId();
            row[2] = user.getProfessor();
            row[3] = user.getTerm();
            row[4] = user.getTime();
            row[5] = user.getProfID();
            row[6] = user.getCredit();
            
            dtm.addRow(row);
    }
    }
}
