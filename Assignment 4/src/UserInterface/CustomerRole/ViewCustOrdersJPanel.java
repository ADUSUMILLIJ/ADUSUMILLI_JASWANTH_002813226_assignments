/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerRole;

import Business.CustomerClass;
import Business.MasterOrderCatalClass;
import Business.OrderClass;
import Business.OrderItemClass;
import UserInterface.SalesPersonRole.ViewOrderDetailJPanel;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ajayr
 */
public class ViewCustOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewCustOrdersJPanel
     */
    private JPanel userProcessContainer;
    private MasterOrderCatalClass masterOrderCatalog;
    private CustomerClass customer;
    public ViewCustOrdersJPanel(JPanel userProcessContainer,MasterOrderCatalClass masterOrderCatalog,CustomerClass customer) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.masterOrderCatalog=masterOrderCatalog;
        this.customer=customer;
        populateOrders();
        //Clearing orderDetailsJTable on load
        DefaultTableModel dtm=(DefaultTableModel) orderDetailsJTable.getModel();
        dtm.setRowCount(0);
    }

    private void populateOrders()
    {
        DefaultTableModel dtm=(DefaultTableModel) ordersJTable.getModel();
        dtm.setRowCount(0);
        
        SimpleDateFormat ft= new SimpleDateFormat("MM/dd/yyyy hh:mm aaa");
        for(OrderClass o:masterOrderCatalog.getOrderCatal())
        {
            if(o.getCust()==customer)
            {
                Object row[]= new Object[3];
                row[0]=o;
                row[1]=ft.format(o.getOrderD());
                row[2]=o.getOrderT();
                
                dtm.addRow(row);
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordersJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        viewOrderDetailsJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderDetailsJTable = new javax.swing.JTable();
        viewItemJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View My Order's");

        ordersJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Order", "Date", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ordersJTable);

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        viewOrderDetailsJButton.setText("View Order Details");
        viewOrderDetailsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderDetailsJButtonActionPerformed(evt);
            }
        });

        orderDetailsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item", "Target Price", "Quantity", "Sale Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderDetailsJTable);

        viewItemJButton.setText("View Item");
        viewItemJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewItemJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(backJButton)
                            .addGap(18, 18, 18)
                            .addComponent(viewOrderDetailsJButton))
                        .addComponent(jScrollPane2))
                    .addComponent(viewItemJButton))
                .addContainerGap(445, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(viewOrderDetailsJButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewItemJButton)
                .addContainerGap(331, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void viewItemJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewItemJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderDetailsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select an item from cart", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        OrderItemClass oi = (OrderItemClass) orderDetailsJTable.getValueAt(selectedRow, 0);
        ViewOrderDetailJPanel voijp = new ViewOrderDetailJPanel(userProcessContainer, oi);
        userProcessContainer.add("ViewOrderItemDetailJPanel", voijp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewItemJButtonActionPerformed

    private void viewOrderDetailsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderDetailsJButtonActionPerformed
    // TODO add your handling code here:
int selectedRow = ordersJTable.getSelectedRow();
DefaultTableModel dtm = (DefaultTableModel) orderDetailsJTable.getModel();
dtm.setRowCount(0);

if (selectedRow < 0) {
    JOptionPane.showMessageDialog(this, "Please select an item from the cart", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

OrderClass o = (OrderClass) ordersJTable.getValueAt(selectedRow, 0);

for (OrderItemClass oi : o.getOrderItemL()) {
    Object[] row = new Object[4];
    row[0] = oi;
    row[1] = oi.getProd().getRate();
    row[2] = oi.getQuant();
    row[3] = oi.getSalesPrice();

    dtm.addRow(row);
}

    }//GEN-LAST:event_viewOrderDetailsJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderDetailsJTable;
    private javax.swing.JTable ordersJTable;
    private javax.swing.JButton viewItemJButton;
    private javax.swing.JButton viewOrderDetailsJButton;
    // End of variables declaration//GEN-END:variables
}
