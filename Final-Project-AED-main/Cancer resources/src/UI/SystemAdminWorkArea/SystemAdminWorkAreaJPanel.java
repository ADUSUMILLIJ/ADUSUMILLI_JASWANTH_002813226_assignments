/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SystemAdminWorkArea;

import Model.AddressRepo;
import Model.EcoSystem;
import Model.EnterPrise;
import Model.Network;
import Model.Organization.Organization;
import java.awt.CardLayout;
import static java.time.Clock.system;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author jaswa
 */
public class SystemAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminWorkAreaJPanel
     */
JPanel userContainer;
EcoSystem eco;
private AddressRepo addresslist;
    public SystemAdminWorkAreaJPanel(JPanel userContainer, EcoSystem eco) {
        initComponents();
        this.userContainer = userContainer;
        this.eco =eco;
        populateTreewithData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ButtonManageNET = new javax.swing.JButton();
        ButtonEnterPrise = new javax.swing.JButton();
        buttonEnterPriseAdmin = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTreediagram1 = new javax.swing.JTree();

        setBackground(new java.awt.Color(0, 51, 51));

        jPanel2.add(jScrollPane1);

        ButtonManageNET.setBackground(new java.awt.Color(204, 204, 204));
        ButtonManageNET.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ButtonManageNET.setText("Manage Network");
        ButtonManageNET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonManageNETActionPerformed(evt);
            }
        });

        ButtonEnterPrise.setBackground(new java.awt.Color(204, 204, 204));
        ButtonEnterPrise.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ButtonEnterPrise.setText("Manage Enterprise");
        ButtonEnterPrise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEnterPriseActionPerformed(evt);
            }
        });

        buttonEnterPriseAdmin.setBackground(new java.awt.Color(204, 204, 204));
        buttonEnterPriseAdmin.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buttonEnterPriseAdmin.setText("Manage Enterprise Admin");
        buttonEnterPriseAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEnterPriseAdminActionPerformed(evt);
            }
        });

        jTreediagram1.setBackground(new java.awt.Color(204, 204, 204));
        jTreediagram1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTreediagram1.setForeground(new java.awt.Color(153, 255, 255));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("System");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Network");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Enterprise");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Enterprise Admin");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Reports");
        treeNode1.add(treeNode2);
        jTreediagram1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane2.setViewportView(jTreediagram1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ButtonManageNET, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonEnterPriseAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonEnterPrise, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(139, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(ButtonManageNET)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonEnterPrise)
                        .addGap(29, 29, 29)
                        .addComponent(buttonEnterPriseAdmin))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 2336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonManageNETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonManageNETActionPerformed
        ManageNetworkJPanel manageNtwrkJPnl = new ManageNetworkJPanel(userContainer,eco);
        userContainer.add("manageNtwrkJPnl",manageNtwrkJPnl);
        CardLayout crdlyt = (CardLayout) userContainer.getLayout();
        crdlyt.next(userContainer);
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonManageNETActionPerformed

    private void ButtonEnterPriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEnterPriseActionPerformed
        ManageEnterpriseJPanel mngEntJPanel = new ManageEnterpriseJPanel(userContainer, eco);
        userContainer.add("mngEntJPanel", mngEntJPanel);
        CardLayout crdlyt = (CardLayout) userContainer.getLayout();
        crdlyt.next(userContainer);
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonEnterPriseActionPerformed

    private void buttonEnterPriseAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEnterPriseAdminActionPerformed
        ManageEnterpriseAdminJPanel manageAdminJPnl = new ManageEnterpriseAdminJPanel(userContainer,eco);
        userContainer.add("manageNtwrkJPnl",manageAdminJPnl);
        CardLayout crdlyt = (CardLayout) userContainer.getLayout();
        crdlyt.next(userContainer);        // TODO add your handling code here:
    }//GEN-LAST:event_buttonEnterPriseAdminActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonEnterPrise;
    private javax.swing.JButton ButtonManageNET;
    private javax.swing.JButton buttonEnterPriseAdmin;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jTreediagram1;
    // End of variables declaration//GEN-END:variables

    public void populateTreewithData() {
        // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
      DefaultTreeModel model = (DefaultTreeModel) jTreediagram1.getModel();



        ArrayList<Network> networkList = eco.getNetworks();
        ArrayList<EnterPrise> enterpriseList;
        ArrayList<Organization> organizationList;
        Network network;
        EnterPrise enterprise;
        Organization organization;



        DefaultMutableTreeNode networks = new DefaultMutableTreeNode("Networks");
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        root.removeAllChildren();
        root.insert(networks, 0);



        DefaultMutableTreeNode networkNode;
        DefaultMutableTreeNode enterpriseNode;
        DefaultMutableTreeNode organizationNode;
        for (int i = 0; i < networkList.size(); i++) {
        network = networkList.get(i);
        networkNode = new DefaultMutableTreeNode(network.getNetwork_name());
        networks.insert(networkNode, i);



        enterpriseList = network.getEnterpriseRepo().getEnterpRepo();



        for (int j = 0; j < enterpriseList.size(); j++) {
        enterprise = enterpriseList.get(j);
        enterpriseNode = new DefaultMutableTreeNode(enterprise.getOrgName());
        networkNode.insert(enterpriseNode, j);



        organizationList = enterprise.getOrgaDirectory().getOrganizations();
        for (int k = 0; k < organizationList.size(); k++) {
        organization = organizationList.get(k);
        organizationNode = new DefaultMutableTreeNode(organization.getOrgName());
        enterpriseNode.insert(organizationNode, k);
        }
        }
        }
        model.reload();
    }
}
