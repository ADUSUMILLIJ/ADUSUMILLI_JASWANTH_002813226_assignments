/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.UserInterface.HCEquipStorage;

import Model.Account;
import Model.EcoSystem;
import Model.EnterPrise;
import Model.Network;
import Model.Organization.Organization;
import Model.WorkQueue.HealthCareEquipment_WorkRequest;
import Model.WorkQueue.Work_Request;
import Model.WorkQueue.Transportation_WorkRequest;
import java.awt.CardLayout;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author goutam
 */
public class HealthCareEquipmentWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HealthCareEquipmentWorkAreaJPanel
     */

private JPanel upperContainer;
private EcoSystem eco;
private Account acc;
private Organization org ;
private Network ntk;
private Organization transportOrg;
private EnterPrise enter;
    public HealthCareEquipmentWorkAreaJPanel(JPanel uppercontainer,EcoSystem eco, Account acc,Organization org, Network ntk ) {
        initComponents();

   this.upperContainer = uppercontainer;
this.eco = eco;
this.acc = acc;
this.org = org;
this.ntk = ntk;
populateHealthCareReqTbl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ButtonAssignment = new javax.swing.JButton();
        Buttonback = new javax.swing.JButton();
        ProcessRequestButton = new javax.swing.JButton();
        ViewReqStatusButton = new javax.swing.JButton();
        buttonRefresh = new javax.swing.JButton();
        MainLabel = new javax.swing.JLabel();
        jpanelscroll1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ProcessRequestButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 51, 51));
        setForeground(new java.awt.Color(0, 51, 51));
        setMinimumSize(new java.awt.Dimension(900, 665));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ButtonAssignment.setBackground(new java.awt.Color(204, 204, 204));
        ButtonAssignment.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ButtonAssignment.setText("ASSIGN TO ME");
        ButtonAssignment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAssignmentActionPerformed(evt);
            }
        });
        add(ButtonAssignment, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 470, 167, 43));

        Buttonback.setBackground(new java.awt.Color(204, 204, 204));
        Buttonback.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Buttonback.setText("<<Back");
        Buttonback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonbackActionPerformed(evt);
            }
        });
        add(Buttonback, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 470, 105, 43));

        ProcessRequestButton.setBackground(new java.awt.Color(204, 204, 204));
        ProcessRequestButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ProcessRequestButton.setText("PROCESS REQUEST>>>");
        ProcessRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessRequestButtonActionPerformed(evt);
            }
        });
        add(ProcessRequestButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 470, 257, 43));

        ViewReqStatusButton.setBackground(new java.awt.Color(204, 204, 204));
        ViewReqStatusButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ViewReqStatusButton.setText("VIEW REQUEST STATUS>>");
        ViewReqStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewReqStatusButtonActionPerformed(evt);
            }
        });
        add(ViewReqStatusButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 470, -1, 43));

        buttonRefresh.setBackground(new java.awt.Color(204, 204, 204));
        buttonRefresh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonRefresh.setText("Refresh");
        add(buttonRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 130, 36));

        MainLabel.setBackground(new java.awt.Color(153, 204, 255));
        MainLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        MainLabel.setForeground(new java.awt.Color(153, 255, 255));
        MainLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MainLabel.setText("REQUESTS FROM HOSPITALS");
        add(MainLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, -10, 648, 113));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EQUIPMENT NAME", "URGENCY LEVEL", "QUANTITY", "SENDER"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jpanelscroll1.setViewportView(jTable1);

        add(jpanelscroll1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 909, 279));

        ProcessRequestButton1.setBackground(new java.awt.Color(204, 204, 204));
        ProcessRequestButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ProcessRequestButton1.setText("REMOVE");
        ProcessRequestButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessRequestButton1ActionPerformed(evt);
            }
        });
        add(ProcessRequestButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 470, 257, 43));
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonAssignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAssignmentActionPerformed
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }

        HealthCareEquipment_WorkRequest request = (HealthCareEquipment_WorkRequest)jTable1.getValueAt(selectedRow, 0);
        request.setReceiver(acc);
        request.setStatus("Pending");
        request.setTransportrequestStatus("N");

        populateHealthCareReqTbl();        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonAssignmentActionPerformed

    private void ButtonbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonbackActionPerformed
        upperContainer.remove(this);
        CardLayout layout = (CardLayout) upperContainer.getLayout();
        layout.previous(upperContainer);        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonbackActionPerformed

    private void ProcessRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessRequestButtonActionPerformed
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row");
            return;
        }

        HealthCareEquipment_WorkRequest request = (HealthCareEquipment_WorkRequest)jTable1.getValueAt(selectedRow, 0);
        System.out.println("hello");
        request.setStatus("Request sent to transport department for delivery");
        Transportation_WorkRequest transportrequest=new Transportation_WorkRequest();
        transportrequest=new Transportation_WorkRequest();
     transportrequest.setSender(acc);

        transportrequest.setHospitalName(request.getHospitalName());

        transportrequest.setUrgency(request.getUrgencyLevel());
        transportrequest.setStatus("Sent");
        transportrequest.setEquipmentinfo(("Name: "+request.getEquipName())+","+ "Qauntity: " +( request.getQuantity()));
        request.setExpectedArrivalTime(request.getMessage());
        request.setTransportrequestStatus("Y");
        if(ntk.getNetwork_name().equals(this.ntk.getNetwork_name())){
            for(EnterPrise enterprise :ntk.getEnterpriseRepo().getEnterpRepo() ){
                System.out.println("****" +enterprise.getOrgName());
                System.out.println("******"+enterprise.getEnterprise_type());
                for(Organization organization:enterprise.getOrgaDirectory().getOrganizations()){
                    System.out.println("***** Organization Name:" +organization.getOrgName());
                    if(organization.getOrgName().equals("Transportation Organization")){
                        System.out.println("True");
                        System.out.println("***** organization Name"+organization.getOrgName());
                        JOptionPane.showMessageDialog(null, "A Notification has been sent to concerned Transport Department "
                            + "The request id is : "+transportrequest.getUniqueId());
                        int requestId=transportrequest.getUniqueId();
                        System.out.println("***" +requestId);
                        transportrequest.setRequestId(requestId);
                        acc.getWorkQ().getWorkRequestList().add(transportrequest);
                        organization.getWQ().getWorkRequestList().add(transportrequest);

                    }

                }
            }

            CardLayout layout = (CardLayout) upperContainer.getLayout();
            upperContainer.add("ProcessRequest", new ViewTransportationRequestJPanel(upperContainer,acc));
            layout.next(upperContainer);

        }
        else{
            CardLayout layout = (CardLayout) upperContainer.getLayout();
            upperContainer.add("ProcessRequest", new ViewTransportationRequestJPanel(upperContainer,acc));
            layout.next(upperContainer);

        }
        // populateTransportWorkRequest();
        // TODO add your handling code here:
    }//GEN-LAST:event_ProcessRequestButtonActionPerformed

    private void ViewReqStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReqStatusButtonActionPerformed
      /*  CardLayout layout = (CardLayout) upperContainer.getLayout();
        upperContainer.add("ProcessRequest", new ViewTransportationRequestJPanel(upperContainer,acc));
        layout.next(upperContainer);    */
      // TODO add your handling code here:
        System.out.println("Button clicked"); // Add this line for debugging

    // Check if the CardLayout is correctly set up
    CardLayout layout = (CardLayout) upperContainer.getLayout();
    if (layout != null) {
        // Create and add the new panel
        ViewTransportationRequestJPanel transportationPanel = new ViewTransportationRequestJPanel(upperContainer, acc);
        upperContainer.add("ProcessRequest", transportationPanel);

        // Switch to the new panel
        layout.next(upperContainer);
    } else {
        System.out.println("CardLayout is not initialized or null."); // Add this for debugging
    }
    }//GEN-LAST:event_ViewReqStatusButtonActionPerformed

    private void ProcessRequestButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessRequestButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();

    if (selectedRow < 0) {
        JOptionPane.showMessageDialog(null, "Please select a row to remove.");
    } else {
        // Get the DefaultTableModel of the JTable
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Remove the selected row from the model
        model.removeRow(selectedRow);

        // You may also want to remove the corresponding data from your underlying data structure
        // For example, if you have a List or other data structure that holds the data for the table,
        // remove the corresponding object from that data structure as well.

        // Optional: If you want to reset the selection (remove the selection highlight) after removal
        jTable1.clearSelection();
    }
    }//GEN-LAST:event_ProcessRequestButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAssignment;
    private javax.swing.JButton Buttonback;
    private javax.swing.JLabel MainLabel;
    private javax.swing.JButton ProcessRequestButton;
    private javax.swing.JButton ProcessRequestButton1;
    private javax.swing.JButton ViewReqStatusButton;
    private javax.swing.JButton buttonRefresh;
    private javax.swing.JTable jTable1;
    private javax.swing.JScrollPane jpanelscroll1;
    // End of variables declaration//GEN-END:variables

    private void populateHealthCareReqTbl() {
        // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody

     DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    model.setRowCount(0);

    // Use a set to keep track of added requests
    Set<Object> addedRequests = new HashSet<>();

    for (Work_Request request : org.getWQ().getWorkRequestList()) {
        // Check if the request has already been added to the table
        if (!addedRequests.contains(request)) {
            Object[] row = new Object[6];
            row[0] = ((HealthCareEquipment_WorkRequest) request);
            String urgencyLevel = ((HealthCareEquipment_WorkRequest) request).getUrgencyLevel();
            int quantity = ((HealthCareEquipment_WorkRequest) request).getQuantity();
            row[1] = urgencyLevel;
            row[2] = quantity;
            row[3] = request.getSender().getUsernm();
            
            model.addRow(row);

            // Add the request object to the set to mark it as added
            addedRequests.add(request);
        }
    }
}
}




 /*public void populateTransportWorkRequest(){
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        
        model.setRowCount(0);
        Object row[]=new Object[4];
        for(WorkRequest request : acc.getWorkQueue().getWorkRequestList()){
            row[0]=((TransportationWorkRequest) request);
            row[1]=request.getReceiver();
            row[2]=request.getStatus();
            row[3]=((TransportationWorkRequest)request).getTime();
        }
        
    }
    }*/


