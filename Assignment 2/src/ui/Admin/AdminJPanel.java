/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Admin;

import ui.Admin.ProfDetails.StuDetails.StuDetails;
import ui.Admin.ProfDetails.StuDetails.ProfDetails;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Professor.Professor;
import model.Professor.ProfessorDirectory;
import model.Professor.ProfessorDirectory;
import model.Student.Student;
import model.Student.StudentDirectory;
import ui.Student.StuViewDetails;
/**
 *
 * @author sushanthkumarreddyjanga
 */
public class AdminJPanel extends javax.swing.JPanel {
    ProfessorDirectory professorList;
    StudentDirectory studentList;
    Professor professor;
    Student student;
    JPanel work;
    

    /**
     * Creates new form AdminJPanel
     */
    

    

    public AdminJPanel(JPanel work, ProfessorDirectory professorList, StudentDirectory studentList) {
        initComponents();
        this.work=work;
        this.professorList=professorList;
        this.studentList=studentList;
        populateSTable();
        populatePTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAdminBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtAdminS = new javax.swing.JTextField();
        btnSearchS = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAdminS = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAdminP = new javax.swing.JTable();
        txtAdminP = new javax.swing.JTextField();
        btnSearchP = new javax.swing.JButton();
        btnAdminSView = new javax.swing.JButton();
        btnSDelete = new javax.swing.JButton();
        btnAdminPView = new javax.swing.JButton();
        btnPDelete = new javax.swing.JButton();

        btnAdminBack.setText("Back");
        btnAdminBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminBackActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Admin Page");

        btnSearchS.setText("Search");
        btnSearchS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchSActionPerformed(evt);
            }
        });

        tblAdminS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student Name", "NUID", "Username", "Password"
            }
        ));
        jScrollPane2.setViewportView(tblAdminS);

        tblAdminP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Professor Name", "Employee ID", "Username", "Password"
            }
        ));
        jScrollPane1.setViewportView(tblAdminP);

        btnSearchP.setText("Search");
        btnSearchP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPActionPerformed(evt);
            }
        });

        btnAdminSView.setText("View Student Details");
        btnAdminSView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminSViewActionPerformed(evt);
            }
        });

        btnSDelete.setText("Delete Account");
        btnSDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSDeleteActionPerformed(evt);
            }
        });

        btnAdminPView.setText("View Professor Details");
        btnAdminPView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminPViewActionPerformed(evt);
            }
        });

        btnPDelete.setText("Delete Account");
        btnPDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdminBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtAdminP, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearchP))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAdminPView)
                                    .addComponent(btnPDelete)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtAdminS, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearchS))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAdminSView)
                                    .addComponent(btnSDelete))))
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnAdminBack))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAdminS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchS))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdminSView)
                        .addGap(18, 18, 18)
                        .addComponent(btnSDelete))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAdminP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchP))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdminPView)
                        .addGap(18, 18, 18)
                        .addComponent(btnPDelete))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(233, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdminBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminBackActionPerformed
        // TODO add your handling code here:
        work.remove(this);
        CardLayout layout = (CardLayout) work.getLayout();
        layout.previous(work);
    }//GEN-LAST:event_btnAdminBackActionPerformed

    private void btnSearchSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchSActionPerformed
        // TODO add your handling code here:
        Student result = studentList.searchStudent(txtAdminS.getText());
        if(result == null){
            JOptionPane.showMessageDialog(null, "Account number does not exist","Information", JOptionPane.WARNING_MESSAGE);
        }
        else{
            StuDetails panel = new StuDetails(work,result,studentList);
            work.add("AdminViewJPanel", panel);
            CardLayout layout = (CardLayout) work.getLayout();
            layout.next(work);
        }
    }//GEN-LAST:event_btnSearchSActionPerformed

    private void btnSearchPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPActionPerformed
        // TODO add your handling code here:
        Professor result = professorList.searchProfessor(txtAdminP.getText());
        if(result == null){
            JOptionPane.showMessageDialog(null, "Account number does not exist","Information", JOptionPane.WARNING_MESSAGE);
        }
        else{
            ProfDetails panel = new ProfDetails(work,result,professorList);
            work.add("AdminViewJPanel", panel);
            CardLayout layout = (CardLayout) work.getLayout();
            layout.next(work);
        }
    }//GEN-LAST:event_btnSearchPActionPerformed

    private void btnAdminSViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminSViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAdminS.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "please select a row from table to view details","warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            Student result = (Student)tblAdminS.getValueAt(selectedRow,0);
            StuDetails panel = new StuDetails(work, result, studentList);
            work.add("ViewAccountJPanel", panel);
            CardLayout layout = (CardLayout) work.getLayout();
            layout.next(work);
        }
    }//GEN-LAST:event_btnAdminSViewActionPerformed

    private void btnSDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAdminS.getSelectedRow();
        if(selectedRow >= 0){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete this account ","Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                Student user = (Student) tblAdminS.getValueAt(selectedRow, 0);
                studentList.deleteStudent(user);
                populateSTable();
            }

        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row ","warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSDeleteActionPerformed

    private void btnAdminPViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminPViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAdminP.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "please select a row from table to view details","warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            Professor result = (Professor)tblAdminP.getValueAt(selectedRow,0);
            ProfDetails panel = new ProfDetails(work, result, professorList);
            work.add("ViewAccountJPanel", panel);
            CardLayout layout = (CardLayout) work.getLayout();
            layout.next(work);
        }
    }//GEN-LAST:event_btnAdminPViewActionPerformed

    private void btnPDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAdminP.getSelectedRow();
        if(selectedRow >= 0){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete this account ","Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                Professor user = (Professor) tblAdminP.getValueAt(selectedRow, 0);
                professorList.deleteProfessor(user);
                populatePTable();
            }

        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row ","warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnPDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdminBack;
    private javax.swing.JButton btnAdminPView;
    private javax.swing.JButton btnAdminSView;
    private javax.swing.JButton btnPDelete;
    private javax.swing.JButton btnSDelete;
    private javax.swing.JButton btnSearchP;
    private javax.swing.JButton btnSearchS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblAdminP;
    private javax.swing.JTable tblAdminS;
    private javax.swing.JTextField txtAdminP;
    private javax.swing.JTextField txtAdminS;
    // End of variables declaration//GEN-END:variables
private void populateSTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblAdminS.getModel();
        dtm.setRowCount(0);
        for(Student user: studentList.getStudents()){
            Object[] row = new Object[4];
            
            row[0] = user;
            row[1] = user.getId();
            row[2] = user.getuName();
            row[3] = user.getPassword();
            
            dtm.addRow(row);
        }
    }

    private void populatePTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblAdminP.getModel();
        dtm.setRowCount(0);
        for(Professor user: professorList.getProfessors()){
            Object[] row = new Object[4];
            
            row[0] = user;
            row[1] = user.getId();
            row[2] = user.getuName();
            row[3] = user.getPassword();
            
            dtm.addRow(row);
    }
        
    }
}

